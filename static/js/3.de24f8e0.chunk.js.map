{"version":3,"sources":["../node_modules/react-router-dom/es/warnAboutDeprecatedESMImport.js","../node_modules/react-router-dom/es/Redirect.js","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/posts.module.css","components/Profile/MyPosts/Post/post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Redirect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onBlur","updateStatus","autoFocus","onChange","e","currentTarget","value","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","form_summary_error","createField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJobDescription","lookingForAJob","lolookingForAJob","contactTitle","contactValue","Contact","ProfileInfo","Preloader","banner_image","body_post","src","photos","large","alt","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","s","item","message","like","MyPosts","memo","console","log","postsElement","posts","post","id","createRef","AddPostFormRedux","values","onAddPost","newPost","maxLength10","maxLengthCreator","Field","component","name","placeholder","validate","required","MyPostsContainer","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.de24f8e0.chunk.js","sourcesContent":["\"use strict\";\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  printWarning = function(format, subs) {\n    var index = 0;\n    var message =\n      \"Warning: \" +\n      (subs.length > 0\n        ? format.replace(/%s/g, function() {\n            return subs[index++];\n          })\n        : format);\n\n    if (typeof console !== \"undefined\") {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React Router ---\n      // This error was thrown as a convenience so that you can use the\n      // stack trace to find the callsite that triggered this warning.\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\nexport default function(member) {\n  printWarning(\n    'Please use `import { %s } from \"react-router-dom\"` instead of `import %s from \"react-router-dom/es/%s\"`. ' +\n      \"Support for the latter will be removed in the next major release.\",\n    [member, member]\n  );\n}\n","\"use strict\";\n\nimport warnAboutDeprecatedESMImport from \"./warnAboutDeprecatedESMImport.js\";\nwarnAboutDeprecatedESMImport(\"Redirect\");\n\nimport { Redirect } from \"../esm/react-router-dom.js\";\nexport default Redirect;\n","import React from 'react';\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\nimport {connect} from \"react-redux\";\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) =>{\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3e94I\",\"top_cont\":\"ProfileInfo_top_cont__x_QZK\",\"banner_image\":\"ProfileInfo_banner_image__2-43T\",\"body_post\":\"ProfileInfo_body_post__3UmTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__3yBlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__LQIwz\",\"active\":\"post_active__oEmr6\"};","import React, {useState, useEffect} from 'react';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode]  = useState(false);\r\n    let [status, setStatus]  = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value)\r\n    }\r\n    useEffect ( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    return (\r\n        <>\r\n            { !editMode &&\r\n            <div>\r\n                <span onDoubleClick={ activateEditMode }>{props.status || '---------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onBlur={ deactivateEditMode } autoFocus={true} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","\r\nimport React from 'react';\r\nimport {createField, Input, Textarea} from \"../../Common/FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport style from \"../../Common/FormControls/FormControls.module.css\";\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n\r\n        { error &&  <div className={style.form_summary_error}>{error}</div>}\r\n\r\n        <div>Меня зовут: {createField(\"Full name\", \"fullName\", [], Input)}</div>\r\n        <div>Loking for a job: {createField(\"\", \"lookingForAJob\", [], Input,{type: \"checkbox\"})}</div>\r\n        <div>Skils: {createField(\"\", \"lookingForAJobDescription\", [], Textarea)}</div>\r\n        <div>About me: {createField(\"About me\", \"aboutMe\", [], Textarea)}</div>\r\n\r\n        <div>Contacts: {Object.keys(profile.contacts).map( key => {\r\n            return <div key={key}>\r\n                <b>{key}: </b> {createField(key, \"contacts.\" + key, [], Input)}\r\n            </div>\r\n        })}</div>\r\n\r\n\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataFormReduxForm;","import React, {useState, useEffect} from 'react';\r\n\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloadrer/Preloader\";\r\n\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then( () => {\r\n\t\t\tsetEditMode(false);\r\n\t\t});\r\n\r\n\r\n        // debugger\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.banner_image}>\r\n                {/*<img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500' alt=''/>*/}\r\n            </div>\r\n            <div className={style.body_post}>\r\n                <img\r\n                    src={props.profile.photos.large || 'https://lh3.googleusercontent.com/proxy/Ukde1k4yAp1SNrRVnJjQJBwflhpEnXu_Q3CQZBiKaBC0I62luEEIBII7HYkkWXBTzWlPs88JfYWtJugb_lXkvVWdHgxUFkU0nDIr'}\r\n                    alt=\"\"/>\r\n                {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={props.profile} profile={props.profile}\r\n                                                onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={props.profile} isOwner={props.isOwner}/>}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n\r\n        <div>Меня зовут: {profile.fullName}</div>\r\n        <div> Немного обо мне: {profile.aboutMe} </div>\r\n        <div>поиск работы: {profile.lookingForAJobDescription}</div>\r\n        <div>Loking for a job: {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n        {\r\n            profile.lolookingForAJob &&\r\n            <div>Skils: {profile.lookingForAJobDescription}</div>\r\n        }\r\n        <div>Contacts: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}</div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './post.module.css';\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg\" alt=\"ava\" />\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"text\">{props.message}</div>\r\n\t\t\t\t<span>like {props.like}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './posts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormControls/FormControls\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\tconsole.log(322223)\r\n\tlet postsElement =\r\n\t\t[...props.posts]\r\n\t\t\t// .reverse()\r\n\t\t\t.map( post => <Post like={post.like} key={post.id} message={post.message}/> );\r\n\r\n\tlet newPostElement = React.createRef();\r\n\r\n\tlet addNewPost = (values) => {\r\n\t\tprops.onAddPost(values.newPost);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.posts}>\r\n\t\t\t<div>my posts</div>\r\n\t\t\t<AddPostFormRedux onSubmit={addNewPost}/>\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst PostSend = (props) =>{\r\n\treturn (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={'newPost'} placeholder={'enter your post'} validate={[required, maxLength10]}/>\r\n            <button >Send</button>\r\n        </form>\r\n\t);\r\n}\r\nconst AddPostFormRedux = reduxForm({form: 'dialogAddPostForm'}) (PostSend);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        onAddPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t<div>\r\n\t\t\t<ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\t\t\t<MyPostsContainer/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, setUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile (){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile ()\r\n\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot){\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile ()\r\n        }\r\n     \r\n    }\r\n\r\n    render(){\r\n        return (\r\n           <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n\r\n    withRouter\r\n\r\n)(ProfileContainer);\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps, {getProfile}) (WithUrlDataContainerComponent);"],"sourceRoot":""}